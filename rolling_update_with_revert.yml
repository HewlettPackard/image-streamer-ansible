###
# Copyright (2016) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: all
  gather_facts: no
  serial: 1
  vars:
    - config: "{{ playbook_dir }}/oneview_config.json"
    - revert: true             # Reverts failed SP update 
    - stop_on_failure: true    # Stops remaining SP update if any SP update fails
    - delay_between_updates: 1 # minute
    - os_deployment_plan_uri: /rest/os-deployment-plans/651c0a53-2636-41f5-8c6a-459f2b31140e
    - enclosure_group_uri: /rest/enclosure-groups/24b5211f-1b28-45d1-a982-9144a2a72cfe 
    - deployment_network_uri: '/rest/ethernet-networks/3f12d6be-d4c2-4d63-bffd-5417632f234c'

  tasks:
    - name: Gather SP Facts
      oneview_server_profile_facts:
        config: "{{ config }}"
        name: "{{ inventory_hostname }}"      
      delegate_to: localhost

    - set_fact:
        update_failed: false

    - block: 
        - set_fact:
            update_failed: false                      
        - include: '{{ playbook_dir }}/tasks/oneview_update_serverprofile_task.yml'
      rescue:
        - set_fact:
            update_failed: true
            os_deployment_plan_uri: "{{ server_profiles.0.osDeploymentSettings.osDeploymentPlanUri }}"
            enclosure_group_uri: /rest/enclosure-groups/24b5211f-1b28-45d1-a982-9144a2a72cfe

        - include: '{{ playbook_dir }}/tasks/oneview_revert_serverprofile_task.yml'
          when: revert == true

        - name: 'Update SP failed. Stopping'
          fail: msg="Update SP failed. Stopping script execution"
          when: 
            - update_failed == true 
            - stop_on_failure == true 
            
        - debug: var=revert     
    
    - pause:
        prompt: Waiting for something ...
        minutes: "{{ delay_between_updates }}"        

    - debug: var=update_failed
